// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
menuButton.addEventListener('click', function(event) {
    event.preventDefault();
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞—Å—Å–æ–º 'removable'
    var removableMessages = document.getElementsByClassName('removable');
    while(removableMessages[0]) {
        removableMessages[0].parentNode.removeChild(removableMessages[0]);
    }

    const botMessage = createMessageElement('bot', '–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –º–µ–Ω—é —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º:');
    botMessage.classList.add('removable');
    chatbox.appendChild(botMessage);
    botMessage.scrollIntoView();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
    const all_buttons = [{
        "id": "button1",
        "text": "üìö–ù–µ—Ä–µ—à–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏",
        "class": "custom-button",
        "title": "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏."
    },
    {
        "id": "button2",
        "text": "üóÉÔ∏è–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ PDF",
        "class": "custom-button",
        "title": "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã —Å —Ä–∞—à–∏—Ä–µ–Ω–∏–µ docx, pptx, xlsx –≤ pdf."
    },
    {
        "id": "button3",
        "text": "üíø–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",
        "class": "custom-button",
        "title": "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω–∏ –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã."
    },
    {
        "id": "button4",
        "text": "üóÑÔ∏è–û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π",
        "class": "custom-button",
        "title": "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π txt —Ñ–∞–π–ª –∏ –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –±–æ—Ç–∞."
    }
];
for (let button of all_buttons) {
    const buttonElement = document.createElement('button');
    buttonElement.id = button.id;
    buttonElement.className = button.class;
    buttonElement.textContent = button.text;
    botMessage.appendChild(buttonElement);

    if (button.title) {
        const infoIcon = document.createElement('i');
        infoIcon.className = 'info-icon';
        infoIcon.textContent = 'i';

        const modal = document.createElement('div');
        modal.className = 'my-custom-modal'; // –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const modalContent = document.createElement('div');
        modalContent.className = 'my-text-container'; // –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        modalContent.textContent = button.title;
        modal.appendChild(modalContent);
        document.body.appendChild(modal);

        infoIcon.addEventListener('click', function() {
            modal.style.display = 'block';
        });

        window.addEventListener('click', function(event) {
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        });

        botMessage.appendChild(infoIcon);
    }

    botMessage.appendChild(document.createElement('br'));
}

    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è button1
    document.getElementById('button1').addEventListener('click', async function(event) {
        event.preventDefault();
        await loadUnresolvedQuestions();
    });
    
    async function loadUnresolvedQuestions() {
        try {
            const response = await fetch('/get_unresolved_questions/', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            });
    
            const data = await response.json();
            displayQuestions(data);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–µ—Ä–µ—à–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:', error);
        }
    }
    
    function displayQuestions(questions) {
        const botMessage = createMessageElement('bot', '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ—Ä–µ—à–µ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å:');
        const keyboard = document.createElement('div');
        keyboard.classList.add('keyboard');
    
        questions.forEach(question => {
            const questionButton = document.createElement('button');
            questionButton.textContent = question.question_text;
            questionButton.setAttribute('class', 'custom-button');
            questionButton.addEventListener('click', function() {
                promptAnswer(question.id);
            });
            keyboard.appendChild(questionButton);
        });
    
        botMessage.appendChild(keyboard);
        chatbox.appendChild(botMessage);
        botMessage.scrollIntoView();
    }
    
    function promptAnswer(questionId) {
        const botMessage = createMessageElement('bot', '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:');
        const inputElement = document.createElement('input');
        inputElement.setAttribute('id', 'answerInput');
        inputElement.setAttribute('class', 'messageInputTap');
        inputElement.setAttribute('placeholder', '–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π –æ—Ç–≤–µ—Ç');
    
        const submitButton = document.createElement('button');
        submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å';
        submitButton.setAttribute('class', 'custom-button');
        submitButton.addEventListener('click', function() {
            const answerText = inputElement.value;
            sendAnswer(questionId, answerText);
        });
    
        botMessage.appendChild(inputElement);
        botMessage.appendChild(submitButton);
        chatbox.appendChild(botMessage);
        botMessage.scrollIntoView();
    }
    
    async function sendAnswer(questionId, answerText) {
        try {
            const response = await fetch('/save_answer/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                },
                body: JSON.stringify({ question_id: questionId, answer: answerText }),
            });
    
            const data = await response.json();
            const botMessage = createMessageElement('bot', data.message);
            chatbox.appendChild(botMessage);
            botMessage.scrollIntoView();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞:', error);
        }
    }

    document.getElementById('button2').addEventListener('click', function(event) {
        event.preventDefault();
    
        // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
        var instructionMessage = createMessageElement('bot', '–ü—Ä–∏—à–ª–∏ –º–Ω–µ –ª—é–±—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã Word, Excel –∏–ª–∏ PowerPoint, –∏ —è –ø–µ—Ä–µ–≤–µ–¥—É –∏—Ö –≤ PDF. –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ –Ω–µ –±–æ–ª–µ–µ 10 —Ñ–∞–π–ª–æ–≤ –∑–∞ —Ä–∞–∑.');
        // var instructionSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç'); // –£–±–∏—Ä–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
        // chatbox.appendChild(instructionSignature); // –£–±–∏—Ä–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
        chatbox.appendChild(instructionMessage);
        instructionMessage.scrollIntoView();
    
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
        var fileInput = document.createElement('input');
        fileInput.setAttribute('type', 'file');
        fileInput.setAttribute('accept', '.doc,.docx,.xls,.xlsx,.ppt,.pptx');
        fileInput.setAttribute('id', 'fileInput');
        fileInput.setAttribute('multiple', 'multiple'); // –ü–æ–∑–≤–æ–ª—è–µ–º –≤—ã–±–∏—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤
        fileInput.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç
    
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤ —á–∞—Ç
        chatbox.appendChild(fileInput);
    
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        fileInput.click();
    
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        fileInput.addEventListener('change', function(event) {
            var files = event.target.files;
            if (files.length > 10) {
                var warningMessage = createMessageElement('bot', '–Ø –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Ç–æ–º, –Ω–æ —Ç–∞–∫ –∂–µ –Ω–µ –±–æ–ª–µ–µ 10.');
                // chatbox.appendChild(createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç')); // –£–±–∏—Ä–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
                chatbox.appendChild(warningMessage);
                warningMessage.scrollIntoView();
    
                // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –ø–µ—Ä–≤—ã–º–∏ 10
                files = Array.from(files).slice(0, 10);
            }
    
            if (files.length > 0) {
                // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
                var uploadProgressLabel = createMessageElement('bot', '–ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤:');
                var uploadProgressContainer = document.createElement('div');
                uploadProgressContainer.classList.add('progress-container');
                var uploadProgressBar = document.createElement('div');
                uploadProgressBar.classList.add('progress-bar');
                uploadProgressContainer.appendChild(uploadProgressBar);
    
                var conversionProgressLabel = createMessageElement('bot', '–ü—Ä–æ–≥—Ä–µ—Å—Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤:');
                var conversionProgressContainer = document.createElement('div');
                conversionProgressContainer.classList.add('progress-container');
                var conversionProgressBar = document.createElement('div');
                conversionProgressBar.classList.add('progress-bar');
                conversionProgressContainer.appendChild(conversionProgressBar);
    
                // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–§–∞–π–ª—ã –∫–∞—á–∞—é—Ç—Å—è"
                var downloadingMessage = createMessageElement('bot', '–§–∞–π–ª—ã –∫–∞—á–∞—é—Ç—Å—è –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è...');
                // var downloadingSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç'); // –£–±–∏—Ä–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
    
                // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ —á–∞—Ç
                chatbox.appendChild(uploadProgressLabel);
                chatbox.appendChild(uploadProgressContainer);
                chatbox.appendChild(conversionProgressLabel);
                chatbox.appendChild(conversionProgressContainer);
                // chatbox.appendChild(downloadingSignature); // –£–±–∏—Ä–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
                chatbox.appendChild(downloadingMessage);
                downloadingMessage.scrollIntoView();
    
                // –°–æ–∑–¥–∞–µ–º FormData –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã —Ç–µ–∫—É—â–µ–π –ø–∞—Ä—Ç–∏–∏
                var formData = new FormData();
                Array.from(files).forEach(file => {
                    formData.append('files', file);
                });
    
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
                var xhr = new XMLHttpRequest();
                xhr.open('POST', '/upload_file/', true);
                xhr.setRequestHeader('X-CSRFToken', document.querySelector('[name=csrfmiddlewaretoken]').value);
    
                xhr.upload.onprogress = function(event) {
                    if (event.lengthComputable) {
                        var percentComplete = (event.loaded / event.total) * 100;
                        uploadProgressBar.style.width = percentComplete + '%';
                        uploadProgressBar.textContent = Math.round(percentComplete) + '%';
                    }
                };
    
                xhr.onload = function() {
                    if (xhr.status === 200) {
                        var blob = new Blob([xhr.response], { type: 'application/zip' });
                        var blobURL = URL.createObjectURL(blob);
    
                        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
                        chatbox.removeChild(uploadProgressLabel);
                        chatbox.removeChild(uploadProgressContainer);
                        chatbox.removeChild(conversionProgressLabel);
                        chatbox.removeChild(conversionProgressContainer);
                        chatbox.removeChild(downloadingMessage);
                        // chatbox.removeChild(downloadingSignature); // –£–±–∏—Ä–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
                        // chatbox.removeChild(instructionSignature); // –£–±–∏—Ä–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
                        chatbox.removeChild(instructionMessage);
    
                        // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è ZIP-—Ñ–∞–π–ª–∞
                        var downloadLink = document.createElement('a');
                        downloadLink.href = blobURL;
                        downloadLink.download = 'converted_files.zip'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                        downloadLink.textContent = '–°–∫–∞—á–∞—Ç—å –≤—Å–µ PDF-—Ñ–∞–π–ª—ã';
                        downloadLink.classList.add('custom-button'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å .custom-button –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
    
                        var confirmationMessage = createMessageElement('bot', '–í–∞—à–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω—ã –≤ PDF.');
                        confirmationMessage.appendChild(downloadLink);
                        // chatbox.appendChild(createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç')); // –£–±–∏—Ä–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
                        chatbox.appendChild(confirmationMessage);
                        confirmationMessage.scrollIntoView();
                    } else {
                        var errorMessage = createMessageElement('bot', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                        // chatbox.appendChild(createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç')); // –£–±–∏—Ä–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
                        chatbox.appendChild(errorMessage);
                        errorMessage.scrollIntoView();
                    }
                    uploadProgressContainer.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
                    conversionProgressContainer.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
                };
    
                xhr.onerror = function() {
                    var errorMessage = createMessageElement('bot', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                    // chatbox.appendChild(createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç')); // –£–±–∏—Ä–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
                    chatbox.appendChild(errorMessage);
                    errorMessage.scrollIntoView();
                    uploadProgressContainer.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
                    conversionProgressContainer.style.display = 'none'; // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
                };
    
                xhr.responseType = 'blob';
                xhr.send(formData);
    
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ SSE –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
                var eventSource = new EventSource('/progress/');
                eventSource.onmessage = function(event) {
                    var data = event.data;
                    if (data === 'heartbeat') {
                        return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è heartbeat
                    }
                    var [current, total] = data.split('/').map(Number);
                    var percentComplete = (current / total) * 100;
                    conversionProgressBar.style.width = percentComplete + '%';
                    conversionProgressBar.textContent = Math.round(percentComplete) + '%';
                };
    
                eventSource.onerror = function() {
                    eventSource.close();
                };
            }
        });
    });
    document.getElementById('button3').addEventListener('click', async function(event) {
        event.preventDefault();
        await processQuestionsFile();
    });
    
    async function processQuestionsFile() {
        try {
            const response = await fetch('/process_questions_file/', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                }
            });
    
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
    
            const blob = await response.blob();
            const url = URL.createObjectURL(blob);
            const downloadLink = document.createElement('a');
            downloadLink.href = url;
            downloadLink.download = 'questions_new.txt';
            downloadLink.textContent = '–°–∫–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª';
            downloadLink.classList.add('custom-button');
            const botMessage = createMessageElement('bot', '–§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –í—ã –º–æ–∂–µ—Ç–µ –µ–≥–æ —Å–∫–∞—á–∞—Ç—å:');
            botMessage.appendChild(downloadLink);
            chatbox.appendChild(botMessage);
            botMessage.scrollIntoView();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞:', error);
        }
    } 
    document.getElementById('button4').addEventListener('click', function(event) {
        event.preventDefault();
    
        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
        const fileInput = document.createElement('input');
        fileInput.type = 'file';
        fileInput.accept = '.txt';
        fileInput.style.display = 'none';  // –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç
    
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        fileInput.addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                if (file.name === 'questions.txt') {
                    uploadTxtFile(file);
                } else {
                    displayMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –∏–º–µ–Ω–µ–º "questions.txt".');
                }
            }
        });
    
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –¥–æ–∫—É–º–µ–Ω—Ç –∏ –≤—ã–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        document.body.appendChild(fileInput);
        fileInput.click();
        document.body.removeChild(fileInput);  // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    });
    
    async function uploadTxtFile(file) {
        const formData = new FormData();
        formData.append('file', file);
    
        try {
            const response = await fetch('/upload_txt_file/', {
                method: 'POST',
                headers: {
                    'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,  // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è CSRF
                },
                body: formData,
            });
    
            if (response.ok) {
                const data = await response.json();
                console.log('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', data.message);
                displayMessage('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.');
            } else {
                const errorData = await response.json();
                displayMessage(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞.');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞:', error);
            displayMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞.');
        }
    } 
    
    function displayMessage(message) {
        const botMessage = createMessageElement('bot', message);
        chatbox.appendChild(botMessage);
        botMessage.scrollIntoView();
    } 
});